from typing import Literal
from typing_extensions import TypeAlias

from pandapower.auxiliary import pandapowerNet

_Mode: TypeAlias = Literal["pf", "opf", "sc", "se", "pf_3ph"]

BRANCH_RESULTS_KEYS: tuple[str, ...]
suffix_mode: dict[str, str]

def verify_results(net: pandapowerNet, mode: _Mode = "pf") -> None: ...
def get_result_tables(element: str, suffix: str | None = None) -> tuple[str, str]: ...
def empty_res_element(net: pandapowerNet, element: str, suffix: str | None = None) -> None: ...
def init_element(net: pandapowerNet, element: str, suffix: str | None = None) -> None: ...
def get_relevant_elements(mode: _Mode = "pf") -> list[str]: ...
def init_results(net: pandapowerNet, mode: _Mode = "pf") -> None: ...
def reset_results(net: pandapowerNet, mode: _Mode = "pf") -> None: ...
