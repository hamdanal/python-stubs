from _typeshed import Incomplete
from typing import Any

from numpy.typing import DTypeLike, NDArray

def asarray(val: object, dtype: DTypeLike = ...) -> NDArray[Any]: ...
def get_controller_index_by_type(net, ctrl_type, idx=[]): ...
def get_controller_index_by_typename(net, typename, idx=[], case_sensitive: bool = False): ...
def get_controller_index(net, ctrl_type: Incomplete | None = None, parameters: Incomplete | None = None, idx=[]): ...
def log_same_type_existing_controllers(
    net, this_ctrl_type, index: Incomplete | None = None, matching_params: Incomplete | None = None, **kwargs
) -> None: ...
def drop_same_type_existing_controllers(
    net, this_ctrl_type, index: Incomplete | None = None, matching_params: Incomplete | None = None, **kwargs
) -> None: ...
def plot_characteristic(
    characteristic, start, stop, num: int = 20, xlabel: Incomplete | None = None, ylabel: Incomplete | None = None
) -> None: ...
def create_trafo_characteristics(net, trafotable, trafo_index, variable, x_points, y_points) -> None: ...
