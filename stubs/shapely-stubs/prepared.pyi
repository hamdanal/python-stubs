from typing import Generic

from shapely._typing import GeoT

class PreparedGeometry(Generic[GeoT]):
    context: GeoT
    prepared: bool
    def __init__(self, context: GeoT | PreparedGeometry[GeoT]) -> None: ...
    def contains(self, other) -> bool: ...
    def contains_properly(self, other) -> bool: ...
    def covers(self, other) -> bool: ...
    def crosses(self, other) -> bool: ...
    def disjoint(self, other) -> bool: ...
    def intersects(self, other) -> bool: ...
    def overlaps(self, other) -> bool: ...
    def touches(self, other) -> bool: ...
    def within(self, other) -> bool: ...

def prep(ob: GeoT | PreparedGeometry[GeoT]) -> PreparedGeometry[GeoT]: ...
