import json

import pandas as pd

class ReportContainer: ...
class CustomJSONEncoder(json.JSONEncoder): ...
class CustomLogger(CustomJSONEncoder): ...
class AssetType(CustomLogger): ...

class RepairMain(CustomLogger):
    assets: list[str] | None
    def __init__(self, assets: list[str] | None = None) -> None: ...
    def get_assets(self): ...
    def repair(self, data: dict[str, pd.DataFrame], report_container: ReportContainer | None = None): ...
    def deserialize(self, path_or_json_str: str, report_container: ReportContainer) -> RepairMain: ...

class PandapowerRepair(RepairMain):
    def __init__(self, assets: list[AssetType] | None = None) -> None: ...
    def deserialize(
        self, path_or_json_str: str | PandapowerRepair, report_container: ReportContainer | None = None
    ) -> PandapowerRepair: ...

class CIMRepair(CustomLogger):
    profiles: dict[str, RepairMain] | None
    def __init__(self, profiles: dict[str, RepairMain] | None = None) -> None: ...
    def set_profile(self, profile: str, repair_main: RepairMain): ...
    def repair(self, cim_dict: dict[str, dict[str, pd.DataFrame]], report_container: ReportContainer | None = None): ...
    def deserialize(self, path_or_json_str: str | CIMRepair, report_container: ReportContainer | None = None) -> CIMRepair: ...
